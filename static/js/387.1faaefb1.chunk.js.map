{"version":3,"file":"static/js/387.1faaefb1.chunk.js","mappings":"qQAEaA,EAAOC,EAAAA,GAAAA,GAAH,6CAGJC,EAASD,EAAAA,GAAAA,GAAH,4CAGNE,EAAOF,EAAAA,GAAAA,EAAH,sF,SC6CjB,EA9CgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,IAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,IAAaR,GACVS,MAAK,SAAAC,GACJN,EAAWM,EAAKA,KAAKC,QACtB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAAY,oDACb,IACAC,SAAQ,WACPX,GAAa,EACd,GACJ,GAAE,CAACN,IAECG,EAIL,OACE,2BACGE,IAAa,SAACa,EAAA,EAAD,IACM,IAAnBf,EAAQgB,QACP,wBACGhB,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAAC3B,EAAD,YACE,SAACE,EAAD,UAASwB,KACT,UAACvB,EAAD,eAAQwB,OAFCF,EADA,OAQf,UAACvB,EAAD,sFAEQ,OAEP,MAGR,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  list-style: none;\n`;\nexport const Titile = styled.h2`\n  font-size: 20px;\n`;\nexport const Text = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.5;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchReviews } from '../../API';\nimport { toast } from 'react-toastify';\nimport { Loader } from '../../components/Loader/Loader';\nimport { Titile, Text, Item } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchReviews(movieId)\n      .then(data => {\n        setReviews(data.data.results);\n      })\n      .catch(error => {\n        console.log(error);\n        toast.error('Oops, something went wrong. Repeat one more time!');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <Item key={id}>\n              <Titile>{author}</Titile>\n              <Text> {content}</Text>\n            </Item>\n          ))}\n        </ul>\n      ) : (\n        <Titile>\n          Unfortunately, we do not have information about the actors of this\n          film.{' '}\n        </Titile>\n      )}{' '}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["Item","styled","Titile","Text","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","fetchReviews","then","data","results","catch","error","console","log","toast","finally","Loader","length","map","id","author","content"],"sourceRoot":""}