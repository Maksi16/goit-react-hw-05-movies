{"version":3,"file":"static/js/736.f81249f0.chunk.js","mappings":"yQAEaA,EAAOC,EAAAA,GAAAA,GAAH,iKAQJC,EAAOD,EAAAA,GAAAA,GAAH,8HAMJE,EAAMF,EAAAA,GAAAA,IAAH,wCAGHG,EAASH,EAAAA,GAAAA,GAAH,4CAGNI,EAAOJ,EAAAA,GAAAA,EAAH,4C,SCqCjB,EApDa,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAmBA,IAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,IAAeR,GACZS,MAAK,SAAAC,GACJN,EAAQM,EAAKA,KAAKP,KACnB,IACAQ,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZG,EAAAA,GAAAA,MAAY,oDACb,IACAC,SAAQ,WACPV,GAAa,EACd,GACJ,GAAE,CAACN,IAECG,EAIL,OACE,2BACGE,IAAa,SAACY,EAAA,EAAD,IACG,IAAhBd,EAAKe,QACJ,SAACxB,EAAD,UACGS,EAAKgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACR,UAAC3B,EAAD,WACG0B,GACC,SAACzB,EAAD,CAAK2B,IAAG,UA7BH,mCA6BG,OAAqBF,GAAgBG,IAAKJ,KAElD,SAACxB,EAAD,CAAK2B,IAAG,UAhCR,yEAgCyBC,IAAKJ,KAEhC,SAACvB,EAAD,UAASuB,KACT,UAACtB,EAAD,yBAAkBwB,OAPTH,EADH,OAaZ,UAACtB,EAAD,sFAEQ,OAEP,MAGR,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  /* justify-content: space-around;\n  gap: 10px; */\n  margin-left: -16px;\n  margin-top: -16px;\n`;\nexport const Item = styled.li`\n  list-style: none;\n  margin-left: 16px;\n  margin-top: 16px;\n  flex-basis: calc(100% / 6 - 16px);\n`;\nexport const Img = styled.img`\n  width: 100%;\n`;\nexport const Titile = styled.h2`\n  font-size: 18px;\n`;\nexport const Text = styled.p`\n  font-size: 16px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchFilmsCast } from '../../API';\nimport { toast } from 'react-toastify';\nimport { Loader } from '../../components/Loader/Loader';\nimport { List, Img, Item, Titile, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const noImages = `https://banffventureforum.com/wp-content/uploads/2019/08/No-Image.png`;\n  const filmPosterUrl = `https://image.tmdb.org/t/p/w500`;\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchFilmsCast(movieId)\n      .then(data => {\n        setCast(data.data.cast);\n      })\n      .catch(error => {\n        console.log(error);\n        toast.error('Oops, something went wrong. Repeat one more time!');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {cast.length !== 0 ? (\n        <List>\n          {cast.map(({ id, name, profile_path, character }) => (\n            <Item key={id}>\n              {profile_path ? (\n                <Img src={`${filmPosterUrl}${profile_path}`} alt={name} />\n              ) : (\n                <Img src={`${noImages}`} alt={name} />\n              )}\n              <Titile>{name}</Titile>\n              <Text>Character: {character}</Text>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <Titile>\n          Unfortunately, we do not have information about the actors of this\n          film.{' '}\n        </Titile>\n      )}{' '}\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["List","styled","Item","Img","Titile","Text","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","fetchFilmsCast","then","data","catch","error","console","log","toast","finally","Loader","length","map","id","name","profile_path","character","src","alt"],"sourceRoot":""}